pragma solidity 0.5.9;

contract Aluguel {
    
    address payable contaRegistrador;
    bool digidCadastrada = false;
    
    constructor() public {
    
        contaRegistrador = msg.sender;
    
    }
    
    struct imovel {
        string locador;
        uint digidLocador;
        address payable contaLocador;
        
        string locatario;
        uint cpfLocatario;
        uint digidLocatario;
                
       string enderecoImovel;
        
        uint valorLocacao;
        uint prazoLocacao;
        uint index;
     }
    
    mapping(string => imovel) public DadosDoContrato;
    imovel[] public NumeroDoContrato;
    
    function criarContrato(string memory locador, uint digidLocador, 
        address payable contaLocador, string memory enderecoImovel, uint valorLocacao, uint prazoLocacao) public returns(uint index) {
        DadosDoContrato[locador].locador =  locador;
        DadosDoContrato[locador].digidLocador = digidLocador;
        DadosDoContrato[locador].contaLocador = contaLocador;
        DadosDoContrato[locador].enderecoImovel = enderecoImovel;
        DadosDoContrato[locador].valorLocacao = valorLocacao;
        DadosDoContrato[locador].prazoLocacao = prazoLocacao;
        //DadosDoContrato[locador].index = NumeroDoContrato.push(locador)-1;
        return NumeroDoContrato.length-1;
    }    
    
    function registraImovel(address paramEndereco, string memory paramNomeProprietario, uint paramValorVenal) public {
        Imovel memory novoImovel = Imovel(paramEndereco, paramNomeProprietario, paramValorVenal);
        livro1.push(novoImovel);
        livro2[paramEndereco] = novoImovel;
    }
    
     function registraContratante (string paramnome, adress paramenderecoContratante, uint paramvalorDoFrete, uint paramNumeroDoContainer);
        Contratante.push(ContratantePago);
        lista/contratante[ContratantePago.enderecoContratante] = ContratantePago;
    
    //function informaNumeroContrato(string memory locador) public view returns (uint) {
    //    return (NumeroDoContrato[locador].index);
    //}
    
    
    //function devolveNomeProprietario(uint matricula) public view returns (string memory) {
    //    return livro1[matricula].nomeProprietario;
    //}
    
    //function registraLocador
    
    //function registraLocatario
    
    //function registraFiador
    
    //function registraImobiliaria
    
    //function pagamentoAluguel
    
    //function divideHonorarios
    
    //function renovaAluguel
    
    //function calculaMulta
  
}
